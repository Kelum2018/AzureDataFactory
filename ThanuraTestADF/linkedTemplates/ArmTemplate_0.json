{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ThanuraTestADF"
		},
		"AzureBlobStorageDemo2019_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageDemo2019'"
		},
		"kelumazuresql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'kelumazuresql'"
		},
		"DeskTopSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DeskTopSqlServer'"
		},
		"Http_Logs_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TestADFVariableUsage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "File",
							"value": [
								"colors",
								"inventories",
								"inventory_parts",
								"part_categories",
								"parts",
								"sets",
								"themes"
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.LoadAllFiles",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Append Inventory Sets",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "File",
										"value": "inventory_sets"
									}
								},
								{
									"name": "Append Part Relationships",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "File",
										"value": "part_relationships"
									}
								}
							]
						}
					},
					{
						"name": "Set List Of Files",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ListOfFiles",
							"value": {
								"value": "Load @{length(variables('File'))} files: @{join(variables('File'),',')}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"LoadAllFiles": {
						"type": "bool"
					}
				},
				"variables": {
					"File": {
						"type": "Array"
					},
					"ListOfFiles": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageDemo2019')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageDemo2019_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Http_Logs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Rebrickable (https://rebrickable.com/downloads/)",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Http_Logs_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/kelumazuresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('kelumazuresql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-04-30T10:42:00.000Z",
						"endTime": "2020-05-01T10:42:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeskTopIntegrationRunTime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestActivityDependencies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckDivideByZero",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDivideByZero]"
						},
						"linkedServiceName": {
							"referenceName": "kelumazuresql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CheckDivideByZero",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ADFPipeExecutionStatusSucessful]"
						},
						"linkedServiceName": {
							"referenceName": "kelumazuresql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Faliure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CheckDivideByZero",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ADFPipeExecutionStatusFailure]"
						},
						"linkedServiceName": {
							"referenceName": "kelumazuresql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Completion",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CheckDivideByZero",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ADFPipeExecutionStatusCompletion]"
						},
						"linkedServiceName": {
							"referenceName": "kelumazuresql",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CompletionSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Completion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[ADFPipeExecutionStatusSucessful]"
						},
						"linkedServiceName": {
							"referenceName": "kelumazuresql",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/kelumazuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobTestFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HelloWorldDataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "Archive/@{formatDateTime(utcnow(),'yyyy')}/@{formatDateTime(utcnow(),'MM')}/@{formatDateTime(utcnow(),'dd')}",
							"type": "Expression"
						},
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTestDataDataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "Test Data/Jan/01",
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e3p')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Lego_HTTP_to_ADSL_Themes"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "themes.csv",
						"folderPath": "Logo",
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HelloWorldDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HelloWorldDataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Test Data/TestADF",
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IterateAllHelloWorldFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HelloWorldDataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@item().name",
							"type": "Expression"
						},
						"folderPath": "Test Data/TestADF",
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LogoModifiedTestData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageDemo2019",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Lego_HTTP_to_ADSL_Themes"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Logo",
						"container": "sample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "parent_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_e3p')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Http_Logs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Lego_HTTP_to_ADSL_Themes"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "themes.csv.gz"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "parent_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Http_Logs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeskTopSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DeskTopSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "DeskTopIntegrationRunTime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/DeskTopIntegrationRunTime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_HTTP_to_ADLS_Themes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Coping themes from web site and store in ADLS",
				"activities": [
					{
						"name": "Copy_e3p",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "themes.csv.gz"
							},
							{
								"name": "Destination",
								"value": "sample/Logo/themes.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorageDemo2019",
									"type": "LinkedServiceReference"
								},
								"path": "sample/LogoFileErrors"
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_e3p",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_e3p",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "pack_LegoDataTransfer"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_e3p')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e3p')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageDemo2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransferHelloWorldDataFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HelloWorldDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "IterateAllFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IterateAllHelloWorldFiles",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureBlobTestFile",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HelloWorldDataSet')]",
				"[concat(variables('factoryId'), '/datasets/IterateAllHelloWorldFiles')]",
				"[concat(variables('factoryId'), '/datasets/AzureBlobTestFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DeskTopSqlServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADFTestDataDataSets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Count",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ADFTestData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DeskTopSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_TestDB_LogoTestData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DeskTopSqlServer",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Lego_HTTP_to_ADSL_Themes"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Parent_Id",
						"type": "varchar"
					},
					{
						"name": "LoadDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LogoTestData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DeskTopSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Modified_Logo_Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_e3p",
								"type": "DatasetReference"
							},
							"name": "demostorage2019Logo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "LogoModifiedTestData",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddLoadDate"
						}
					],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> demostorage2019Logo\ndemostorage2019Logo derive(load_date = currentDate()) ~> AddLoadDate\nAddLoadDate sink(input(\n\t\tid as string,\n\t\tname as string,\n\t\tparent_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e3p')]",
				"[concat(variables('factoryId'), '/datasets/LogoModifiedTestData')]"
			]
		}
	]
}